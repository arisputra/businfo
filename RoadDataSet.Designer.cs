//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Businfo {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RoadDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RoadDataSet : global::System.Data.DataSet {
        
        private 公交站线DataTable table公交站线;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RoadDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RoadDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["公交站线"] != null)) {
                    base.Tables.Add(new 公交站线DataTable(ds.Tables["公交站线"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 公交站线DataTable 公交站线 {
            get {
                return this.table公交站线;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RoadDataSet cln = ((RoadDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["公交站线"] != null)) {
                    base.Tables.Add(new 公交站线DataTable(ds.Tables["公交站线"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table公交站线 = ((公交站线DataTable)(base.Tables["公交站线"]));
            if ((initTable == true)) {
                if ((this.table公交站线 != null)) {
                    this.table公交站线.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RoadDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RoadDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table公交站线 = new 公交站线DataTable();
            base.Tables.Add(this.table公交站线);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize公交站线() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RoadDataSet ds = new RoadDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 公交站线RowChangeEventHandler(object sender, 公交站线RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 公交站线DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOBJECTID;
            
            private global::System.Data.DataColumn columnSHAPE;
            
            private global::System.Data.DataColumn columnRoadID;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnRoadName;
            
            private global::System.Data.DataColumn columnRoadType;
            
            private global::System.Data.DataColumn columnRoadTravel;
            
            private global::System.Data.DataColumn columnFirstStartTime;
            
            private global::System.Data.DataColumn columnFirstCloseTime;
            
            private global::System.Data.DataColumn columnEndStartTime;
            
            private global::System.Data.DataColumn columnEndCloseTim;
            
            private global::System.Data.DataColumn columnTicketPrice1;
            
            private global::System.Data.DataColumn columnTicketPrice2;
            
            private global::System.Data.DataColumn columnTicketPrice3;
            
            private global::System.Data.DataColumn columnRoadNo;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnAverageLoadFactor;
            
            private global::System.Data.DataColumn columnBusNumber;
            
            private global::System.Data.DataColumn columnCapacity;
            
            private global::System.Data.DataColumn columnPassengerSum;
            
            private global::System.Data.DataColumn columnPassengerWorkSum;
            
            private global::System.Data.DataColumn columnAverageSpeed;
            
            private global::System.Data.DataColumn columnNulineCoefficient;
            
            private global::System.Data.DataColumn columnNulineCoefficient2;
            
            private global::System.Data.DataColumn columnPicture1;
            
            private global::System.Data.DataColumn columnPicture2;
            
            private global::System.Data.DataColumn columnPicture3;
            
            private global::System.Data.DataColumn columnPicture4;
            
            private global::System.Data.DataColumn columnPicture5;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnServeArea;
            
            private global::System.Data.DataColumn columnAverageLength;
            
            private global::System.Data.DataColumn columnHigeLoadFactor;
            
            private global::System.Data.DataColumn columnRoadLoad;
            
            private global::System.Data.DataColumn columnDirectImbalance;
            
            private global::System.Data.DataColumn columnAlternatelyCoefficient;
            
            private global::System.Data.DataColumn columnTimeCoefficient;
            
            private global::System.Data.DataColumn columnDayCoefficient;
            
            private global::System.Data.DataColumn columnHighHourSect;
            
            private global::System.Data.DataColumn columnHighHourArea;
            
            private global::System.Data.DataColumn columnHighHourMass;
            
            private global::System.Data.DataColumn columnHighPassengerMass;
            
            private global::System.Data.DataColumn columnSHAPE_Length;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线DataTable() {
                this.TableName = "公交站线";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 公交站线DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 公交站线DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OBJECTIDColumn {
                get {
                    return this.columnOBJECTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHAPEColumn {
                get {
                    return this.columnSHAPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadIDColumn {
                get {
                    return this.columnRoadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadNameColumn {
                get {
                    return this.columnRoadName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadTypeColumn {
                get {
                    return this.columnRoadType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadTravelColumn {
                get {
                    return this.columnRoadTravel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstStartTimeColumn {
                get {
                    return this.columnFirstStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstCloseTimeColumn {
                get {
                    return this.columnFirstCloseTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndStartTimeColumn {
                get {
                    return this.columnEndStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndCloseTimColumn {
                get {
                    return this.columnEndCloseTim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TicketPrice1Column {
                get {
                    return this.columnTicketPrice1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TicketPrice2Column {
                get {
                    return this.columnTicketPrice2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TicketPrice3Column {
                get {
                    return this.columnTicketPrice3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadNoColumn {
                get {
                    return this.columnRoadNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AverageLoadFactorColumn {
                get {
                    return this.columnAverageLoadFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusNumberColumn {
                get {
                    return this.columnBusNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CapacityColumn {
                get {
                    return this.columnCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PassengerSumColumn {
                get {
                    return this.columnPassengerSum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PassengerWorkSumColumn {
                get {
                    return this.columnPassengerWorkSum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AverageSpeedColumn {
                get {
                    return this.columnAverageSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NulineCoefficientColumn {
                get {
                    return this.columnNulineCoefficient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NulineCoefficient2Column {
                get {
                    return this.columnNulineCoefficient2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Picture1Column {
                get {
                    return this.columnPicture1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Picture2Column {
                get {
                    return this.columnPicture2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Picture3Column {
                get {
                    return this.columnPicture3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Picture4Column {
                get {
                    return this.columnPicture4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Picture5Column {
                get {
                    return this.columnPicture5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServeAreaColumn {
                get {
                    return this.columnServeArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AverageLengthColumn {
                get {
                    return this.columnAverageLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HigeLoadFactorColumn {
                get {
                    return this.columnHigeLoadFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadLoadColumn {
                get {
                    return this.columnRoadLoad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectImbalanceColumn {
                get {
                    return this.columnDirectImbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlternatelyCoefficientColumn {
                get {
                    return this.columnAlternatelyCoefficient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeCoefficientColumn {
                get {
                    return this.columnTimeCoefficient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayCoefficientColumn {
                get {
                    return this.columnDayCoefficient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HighHourSectColumn {
                get {
                    return this.columnHighHourSect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HighHourAreaColumn {
                get {
                    return this.columnHighHourArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HighHourMassColumn {
                get {
                    return this.columnHighHourMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HighPassengerMassColumn {
                get {
                    return this.columnHighPassengerMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHAPE_LengthColumn {
                get {
                    return this.columnSHAPE_Length;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线Row this[int index] {
                get {
                    return ((公交站线Row)(this.Rows[index]));
                }
            }
            
            public event 公交站线RowChangeEventHandler 公交站线RowChanging;
            
            public event 公交站线RowChangeEventHandler 公交站线RowChanged;
            
            public event 公交站线RowChangeEventHandler 公交站线RowDeleting;
            
            public event 公交站线RowChangeEventHandler 公交站线RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add公交站线Row(公交站线Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线Row Add公交站线Row(
                        byte[] SHAPE, 
                        int RoadID, 
                        string Company, 
                        string RoadName, 
                        string RoadType, 
                        string RoadTravel, 
                        string FirstStartTime, 
                        string FirstCloseTime, 
                        string EndStartTime, 
                        string EndCloseTim, 
                        double TicketPrice1, 
                        double TicketPrice2, 
                        double TicketPrice3, 
                        int RoadNo, 
                        double Length, 
                        double AverageLoadFactor, 
                        int BusNumber, 
                        int Capacity, 
                        int PassengerSum, 
                        int PassengerWorkSum, 
                        double AverageSpeed, 
                        double NulineCoefficient, 
                        double NulineCoefficient2, 
                        string Picture1, 
                        string Picture2, 
                        string Picture3, 
                        string Picture4, 
                        string Picture5, 
                        string Unit, 
                        double ServeArea, 
                        double AverageLength, 
                        double HigeLoadFactor, 
                        double RoadLoad, 
                        double DirectImbalance, 
                        double AlternatelyCoefficient, 
                        double TimeCoefficient, 
                        double DayCoefficient, 
                        double HighHourSect, 
                        double HighHourArea, 
                        double HighHourMass, 
                        double HighPassengerMass, 
                        double SHAPE_Length) {
                公交站线Row row公交站线Row = ((公交站线Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHAPE,
                        RoadID,
                        Company,
                        RoadName,
                        RoadType,
                        RoadTravel,
                        FirstStartTime,
                        FirstCloseTime,
                        EndStartTime,
                        EndCloseTim,
                        TicketPrice1,
                        TicketPrice2,
                        TicketPrice3,
                        RoadNo,
                        Length,
                        AverageLoadFactor,
                        BusNumber,
                        Capacity,
                        PassengerSum,
                        PassengerWorkSum,
                        AverageSpeed,
                        NulineCoefficient,
                        NulineCoefficient2,
                        Picture1,
                        Picture2,
                        Picture3,
                        Picture4,
                        Picture5,
                        Unit,
                        ServeArea,
                        AverageLength,
                        HigeLoadFactor,
                        RoadLoad,
                        DirectImbalance,
                        AlternatelyCoefficient,
                        TimeCoefficient,
                        DayCoefficient,
                        HighHourSect,
                        HighHourArea,
                        HighHourMass,
                        HighPassengerMass,
                        SHAPE_Length};
                row公交站线Row.ItemArray = columnValuesArray;
                this.Rows.Add(row公交站线Row);
                return row公交站线Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线Row FindByOBJECTID(int OBJECTID) {
                return ((公交站线Row)(this.Rows.Find(new object[] {
                            OBJECTID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                公交站线DataTable cln = ((公交站线DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 公交站线DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOBJECTID = base.Columns["OBJECTID"];
                this.columnSHAPE = base.Columns["SHAPE"];
                this.columnRoadID = base.Columns["RoadID"];
                this.columnCompany = base.Columns["Company"];
                this.columnRoadName = base.Columns["RoadName"];
                this.columnRoadType = base.Columns["RoadType"];
                this.columnRoadTravel = base.Columns["RoadTravel"];
                this.columnFirstStartTime = base.Columns["FirstStartTime"];
                this.columnFirstCloseTime = base.Columns["FirstCloseTime"];
                this.columnEndStartTime = base.Columns["EndStartTime"];
                this.columnEndCloseTim = base.Columns["EndCloseTim"];
                this.columnTicketPrice1 = base.Columns["TicketPrice1"];
                this.columnTicketPrice2 = base.Columns["TicketPrice2"];
                this.columnTicketPrice3 = base.Columns["TicketPrice3"];
                this.columnRoadNo = base.Columns["RoadNo"];
                this.columnLength = base.Columns["Length"];
                this.columnAverageLoadFactor = base.Columns["AverageLoadFactor"];
                this.columnBusNumber = base.Columns["BusNumber"];
                this.columnCapacity = base.Columns["Capacity"];
                this.columnPassengerSum = base.Columns["PassengerSum"];
                this.columnPassengerWorkSum = base.Columns["PassengerWorkSum"];
                this.columnAverageSpeed = base.Columns["AverageSpeed"];
                this.columnNulineCoefficient = base.Columns["NulineCoefficient"];
                this.columnNulineCoefficient2 = base.Columns["NulineCoefficient2"];
                this.columnPicture1 = base.Columns["Picture1"];
                this.columnPicture2 = base.Columns["Picture2"];
                this.columnPicture3 = base.Columns["Picture3"];
                this.columnPicture4 = base.Columns["Picture4"];
                this.columnPicture5 = base.Columns["Picture5"];
                this.columnUnit = base.Columns["Unit"];
                this.columnServeArea = base.Columns["ServeArea"];
                this.columnAverageLength = base.Columns["AverageLength"];
                this.columnHigeLoadFactor = base.Columns["HigeLoadFactor"];
                this.columnRoadLoad = base.Columns["RoadLoad"];
                this.columnDirectImbalance = base.Columns["DirectImbalance"];
                this.columnAlternatelyCoefficient = base.Columns["AlternatelyCoefficient"];
                this.columnTimeCoefficient = base.Columns["TimeCoefficient"];
                this.columnDayCoefficient = base.Columns["DayCoefficient"];
                this.columnHighHourSect = base.Columns["HighHourSect"];
                this.columnHighHourArea = base.Columns["HighHourArea"];
                this.columnHighHourMass = base.Columns["HighHourMass"];
                this.columnHighPassengerMass = base.Columns["HighPassengerMass"];
                this.columnSHAPE_Length = base.Columns["SHAPE_Length"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOBJECTID = new global::System.Data.DataColumn("OBJECTID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOBJECTID);
                this.columnSHAPE = new global::System.Data.DataColumn("SHAPE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHAPE);
                this.columnRoadID = new global::System.Data.DataColumn("RoadID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadID);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnRoadName = new global::System.Data.DataColumn("RoadName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadName);
                this.columnRoadType = new global::System.Data.DataColumn("RoadType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadType);
                this.columnRoadTravel = new global::System.Data.DataColumn("RoadTravel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadTravel);
                this.columnFirstStartTime = new global::System.Data.DataColumn("FirstStartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstStartTime);
                this.columnFirstCloseTime = new global::System.Data.DataColumn("FirstCloseTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstCloseTime);
                this.columnEndStartTime = new global::System.Data.DataColumn("EndStartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndStartTime);
                this.columnEndCloseTim = new global::System.Data.DataColumn("EndCloseTim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndCloseTim);
                this.columnTicketPrice1 = new global::System.Data.DataColumn("TicketPrice1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicketPrice1);
                this.columnTicketPrice2 = new global::System.Data.DataColumn("TicketPrice2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicketPrice2);
                this.columnTicketPrice3 = new global::System.Data.DataColumn("TicketPrice3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicketPrice3);
                this.columnRoadNo = new global::System.Data.DataColumn("RoadNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadNo);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnAverageLoadFactor = new global::System.Data.DataColumn("AverageLoadFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageLoadFactor);
                this.columnBusNumber = new global::System.Data.DataColumn("BusNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusNumber);
                this.columnCapacity = new global::System.Data.DataColumn("Capacity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapacity);
                this.columnPassengerSum = new global::System.Data.DataColumn("PassengerSum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassengerSum);
                this.columnPassengerWorkSum = new global::System.Data.DataColumn("PassengerWorkSum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassengerWorkSum);
                this.columnAverageSpeed = new global::System.Data.DataColumn("AverageSpeed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageSpeed);
                this.columnNulineCoefficient = new global::System.Data.DataColumn("NulineCoefficient", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNulineCoefficient);
                this.columnNulineCoefficient2 = new global::System.Data.DataColumn("NulineCoefficient2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNulineCoefficient2);
                this.columnPicture1 = new global::System.Data.DataColumn("Picture1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture1);
                this.columnPicture2 = new global::System.Data.DataColumn("Picture2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture2);
                this.columnPicture3 = new global::System.Data.DataColumn("Picture3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture3);
                this.columnPicture4 = new global::System.Data.DataColumn("Picture4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture4);
                this.columnPicture5 = new global::System.Data.DataColumn("Picture5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture5);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnServeArea = new global::System.Data.DataColumn("ServeArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServeArea);
                this.columnAverageLength = new global::System.Data.DataColumn("AverageLength", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageLength);
                this.columnHigeLoadFactor = new global::System.Data.DataColumn("HigeLoadFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHigeLoadFactor);
                this.columnRoadLoad = new global::System.Data.DataColumn("RoadLoad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadLoad);
                this.columnDirectImbalance = new global::System.Data.DataColumn("DirectImbalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectImbalance);
                this.columnAlternatelyCoefficient = new global::System.Data.DataColumn("AlternatelyCoefficient", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternatelyCoefficient);
                this.columnTimeCoefficient = new global::System.Data.DataColumn("TimeCoefficient", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeCoefficient);
                this.columnDayCoefficient = new global::System.Data.DataColumn("DayCoefficient", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayCoefficient);
                this.columnHighHourSect = new global::System.Data.DataColumn("HighHourSect", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighHourSect);
                this.columnHighHourArea = new global::System.Data.DataColumn("HighHourArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighHourArea);
                this.columnHighHourMass = new global::System.Data.DataColumn("HighHourMass", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighHourMass);
                this.columnHighPassengerMass = new global::System.Data.DataColumn("HighPassengerMass", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighPassengerMass);
                this.columnSHAPE_Length = new global::System.Data.DataColumn("SHAPE_Length", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHAPE_Length);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOBJECTID}, true));
                this.columnOBJECTID.AutoIncrement = true;
                this.columnOBJECTID.AllowDBNull = false;
                this.columnOBJECTID.Unique = true;
                this.columnCompany.MaxLength = 50;
                this.columnRoadName.MaxLength = 100;
                this.columnRoadType.MaxLength = 50;
                this.columnRoadTravel.MaxLength = 50;
                this.columnFirstStartTime.MaxLength = 50;
                this.columnFirstCloseTime.MaxLength = 50;
                this.columnEndStartTime.MaxLength = 50;
                this.columnEndCloseTim.MaxLength = 50;
                this.columnPicture1.MaxLength = 200;
                this.columnPicture2.MaxLength = 200;
                this.columnPicture3.MaxLength = 200;
                this.columnPicture4.MaxLength = 200;
                this.columnPicture5.MaxLength = 200;
                this.columnUnit.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线Row New公交站线Row() {
                return ((公交站线Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 公交站线Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(公交站线Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.公交站线RowChanged != null)) {
                    this.公交站线RowChanged(this, new 公交站线RowChangeEvent(((公交站线Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.公交站线RowChanging != null)) {
                    this.公交站线RowChanging(this, new 公交站线RowChangeEvent(((公交站线Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.公交站线RowDeleted != null)) {
                    this.公交站线RowDeleted(this, new 公交站线RowChangeEvent(((公交站线Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.公交站线RowDeleting != null)) {
                    this.公交站线RowDeleting(this, new 公交站线RowChangeEvent(((公交站线Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove公交站线Row(公交站线Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RoadDataSet ds = new RoadDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "公交站线DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 公交站线Row : global::System.Data.DataRow {
            
            private 公交站线DataTable table公交站线;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 公交站线Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table公交站线 = ((公交站线DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OBJECTID {
                get {
                    return ((int)(this[this.table公交站线.OBJECTIDColumn]));
                }
                set {
                    this[this.table公交站线.OBJECTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SHAPE {
                get {
                    try {
                        return ((byte[])(this[this.table公交站线.SHAPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“SHAPE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.SHAPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RoadID {
                get {
                    try {
                        return ((int)(this[this.table公交站线.RoadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“RoadID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.RoadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.table公交站线.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Company”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoadName {
                get {
                    try {
                        return ((string)(this[this.table公交站线.RoadNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“RoadName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.RoadNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoadType {
                get {
                    try {
                        return ((string)(this[this.table公交站线.RoadTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“RoadType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.RoadTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoadTravel {
                get {
                    try {
                        return ((string)(this[this.table公交站线.RoadTravelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“RoadTravel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.RoadTravelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstStartTime {
                get {
                    try {
                        return ((string)(this[this.table公交站线.FirstStartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“FirstStartTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.FirstStartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstCloseTime {
                get {
                    try {
                        return ((string)(this[this.table公交站线.FirstCloseTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“FirstCloseTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.FirstCloseTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndStartTime {
                get {
                    try {
                        return ((string)(this[this.table公交站线.EndStartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“EndStartTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.EndStartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndCloseTim {
                get {
                    try {
                        return ((string)(this[this.table公交站线.EndCloseTimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“EndCloseTim”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.EndCloseTimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TicketPrice1 {
                get {
                    try {
                        return ((double)(this[this.table公交站线.TicketPrice1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“TicketPrice1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.TicketPrice1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TicketPrice2 {
                get {
                    try {
                        return ((double)(this[this.table公交站线.TicketPrice2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“TicketPrice2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.TicketPrice2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TicketPrice3 {
                get {
                    try {
                        return ((double)(this[this.table公交站线.TicketPrice3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“TicketPrice3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.TicketPrice3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RoadNo {
                get {
                    try {
                        return ((int)(this[this.table公交站线.RoadNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“RoadNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.RoadNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Length {
                get {
                    try {
                        return ((double)(this[this.table公交站线.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Length”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AverageLoadFactor {
                get {
                    try {
                        return ((double)(this[this.table公交站线.AverageLoadFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“AverageLoadFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.AverageLoadFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BusNumber {
                get {
                    try {
                        return ((int)(this[this.table公交站线.BusNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“BusNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.BusNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Capacity {
                get {
                    try {
                        return ((int)(this[this.table公交站线.CapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Capacity”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.CapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PassengerSum {
                get {
                    try {
                        return ((int)(this[this.table公交站线.PassengerSumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“PassengerSum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.PassengerSumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PassengerWorkSum {
                get {
                    try {
                        return ((int)(this[this.table公交站线.PassengerWorkSumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“PassengerWorkSum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.PassengerWorkSumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AverageSpeed {
                get {
                    try {
                        return ((double)(this[this.table公交站线.AverageSpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“AverageSpeed”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.AverageSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NulineCoefficient {
                get {
                    try {
                        return ((double)(this[this.table公交站线.NulineCoefficientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“NulineCoefficient”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.NulineCoefficientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NulineCoefficient2 {
                get {
                    try {
                        return ((double)(this[this.table公交站线.NulineCoefficient2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“NulineCoefficient2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.NulineCoefficient2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Picture1 {
                get {
                    try {
                        return ((string)(this[this.table公交站线.Picture1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Picture1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.Picture1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Picture2 {
                get {
                    try {
                        return ((string)(this[this.table公交站线.Picture2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Picture2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.Picture2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Picture3 {
                get {
                    try {
                        return ((string)(this[this.table公交站线.Picture3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Picture3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.Picture3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Picture4 {
                get {
                    try {
                        return ((string)(this[this.table公交站线.Picture4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Picture4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.Picture4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Picture5 {
                get {
                    try {
                        return ((string)(this[this.table公交站线.Picture5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Picture5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.Picture5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.table公交站线.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“Unit”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ServeArea {
                get {
                    try {
                        return ((double)(this[this.table公交站线.ServeAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“ServeArea”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.ServeAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AverageLength {
                get {
                    try {
                        return ((double)(this[this.table公交站线.AverageLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“AverageLength”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.AverageLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HigeLoadFactor {
                get {
                    try {
                        return ((double)(this[this.table公交站线.HigeLoadFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“HigeLoadFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.HigeLoadFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RoadLoad {
                get {
                    try {
                        return ((double)(this[this.table公交站线.RoadLoadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“RoadLoad”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.RoadLoadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DirectImbalance {
                get {
                    try {
                        return ((double)(this[this.table公交站线.DirectImbalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“DirectImbalance”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.DirectImbalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AlternatelyCoefficient {
                get {
                    try {
                        return ((double)(this[this.table公交站线.AlternatelyCoefficientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“AlternatelyCoefficient”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.AlternatelyCoefficientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TimeCoefficient {
                get {
                    try {
                        return ((double)(this[this.table公交站线.TimeCoefficientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“TimeCoefficient”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.TimeCoefficientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DayCoefficient {
                get {
                    try {
                        return ((double)(this[this.table公交站线.DayCoefficientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“DayCoefficient”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.DayCoefficientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HighHourSect {
                get {
                    try {
                        return ((double)(this[this.table公交站线.HighHourSectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“HighHourSect”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.HighHourSectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HighHourArea {
                get {
                    try {
                        return ((double)(this[this.table公交站线.HighHourAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“HighHourArea”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.HighHourAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HighHourMass {
                get {
                    try {
                        return ((double)(this[this.table公交站线.HighHourMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“HighHourMass”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.HighHourMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HighPassengerMass {
                get {
                    try {
                        return ((double)(this[this.table公交站线.HighPassengerMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“HighPassengerMass”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.HighPassengerMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SHAPE_Length {
                get {
                    try {
                        return ((double)(this[this.table公交站线.SHAPE_LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“公交站线”中列“SHAPE_Length”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table公交站线.SHAPE_LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHAPENull() {
                return this.IsNull(this.table公交站线.SHAPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHAPENull() {
                this[this.table公交站线.SHAPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadIDNull() {
                return this.IsNull(this.table公交站线.RoadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadIDNull() {
                this[this.table公交站线.RoadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.table公交站线.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.table公交站线.CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadNameNull() {
                return this.IsNull(this.table公交站线.RoadNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadNameNull() {
                this[this.table公交站线.RoadNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadTypeNull() {
                return this.IsNull(this.table公交站线.RoadTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadTypeNull() {
                this[this.table公交站线.RoadTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadTravelNull() {
                return this.IsNull(this.table公交站线.RoadTravelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadTravelNull() {
                this[this.table公交站线.RoadTravelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstStartTimeNull() {
                return this.IsNull(this.table公交站线.FirstStartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstStartTimeNull() {
                this[this.table公交站线.FirstStartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstCloseTimeNull() {
                return this.IsNull(this.table公交站线.FirstCloseTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstCloseTimeNull() {
                this[this.table公交站线.FirstCloseTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndStartTimeNull() {
                return this.IsNull(this.table公交站线.EndStartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndStartTimeNull() {
                this[this.table公交站线.EndStartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndCloseTimNull() {
                return this.IsNull(this.table公交站线.EndCloseTimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndCloseTimNull() {
                this[this.table公交站线.EndCloseTimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTicketPrice1Null() {
                return this.IsNull(this.table公交站线.TicketPrice1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTicketPrice1Null() {
                this[this.table公交站线.TicketPrice1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTicketPrice2Null() {
                return this.IsNull(this.table公交站线.TicketPrice2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTicketPrice2Null() {
                this[this.table公交站线.TicketPrice2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTicketPrice3Null() {
                return this.IsNull(this.table公交站线.TicketPrice3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTicketPrice3Null() {
                this[this.table公交站线.TicketPrice3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadNoNull() {
                return this.IsNull(this.table公交站线.RoadNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadNoNull() {
                this[this.table公交站线.RoadNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.table公交站线.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.table公交站线.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageLoadFactorNull() {
                return this.IsNull(this.table公交站线.AverageLoadFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageLoadFactorNull() {
                this[this.table公交站线.AverageLoadFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusNumberNull() {
                return this.IsNull(this.table公交站线.BusNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusNumberNull() {
                this[this.table公交站线.BusNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCapacityNull() {
                return this.IsNull(this.table公交站线.CapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCapacityNull() {
                this[this.table公交站线.CapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPassengerSumNull() {
                return this.IsNull(this.table公交站线.PassengerSumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPassengerSumNull() {
                this[this.table公交站线.PassengerSumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPassengerWorkSumNull() {
                return this.IsNull(this.table公交站线.PassengerWorkSumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPassengerWorkSumNull() {
                this[this.table公交站线.PassengerWorkSumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageSpeedNull() {
                return this.IsNull(this.table公交站线.AverageSpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageSpeedNull() {
                this[this.table公交站线.AverageSpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNulineCoefficientNull() {
                return this.IsNull(this.table公交站线.NulineCoefficientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNulineCoefficientNull() {
                this[this.table公交站线.NulineCoefficientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNulineCoefficient2Null() {
                return this.IsNull(this.table公交站线.NulineCoefficient2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNulineCoefficient2Null() {
                this[this.table公交站线.NulineCoefficient2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPicture1Null() {
                return this.IsNull(this.table公交站线.Picture1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPicture1Null() {
                this[this.table公交站线.Picture1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPicture2Null() {
                return this.IsNull(this.table公交站线.Picture2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPicture2Null() {
                this[this.table公交站线.Picture2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPicture3Null() {
                return this.IsNull(this.table公交站线.Picture3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPicture3Null() {
                this[this.table公交站线.Picture3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPicture4Null() {
                return this.IsNull(this.table公交站线.Picture4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPicture4Null() {
                this[this.table公交站线.Picture4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPicture5Null() {
                return this.IsNull(this.table公交站线.Picture5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPicture5Null() {
                this[this.table公交站线.Picture5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.table公交站线.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.table公交站线.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServeAreaNull() {
                return this.IsNull(this.table公交站线.ServeAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServeAreaNull() {
                this[this.table公交站线.ServeAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageLengthNull() {
                return this.IsNull(this.table公交站线.AverageLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageLengthNull() {
                this[this.table公交站线.AverageLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHigeLoadFactorNull() {
                return this.IsNull(this.table公交站线.HigeLoadFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHigeLoadFactorNull() {
                this[this.table公交站线.HigeLoadFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadLoadNull() {
                return this.IsNull(this.table公交站线.RoadLoadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadLoadNull() {
                this[this.table公交站线.RoadLoadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectImbalanceNull() {
                return this.IsNull(this.table公交站线.DirectImbalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectImbalanceNull() {
                this[this.table公交站线.DirectImbalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlternatelyCoefficientNull() {
                return this.IsNull(this.table公交站线.AlternatelyCoefficientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlternatelyCoefficientNull() {
                this[this.table公交站线.AlternatelyCoefficientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeCoefficientNull() {
                return this.IsNull(this.table公交站线.TimeCoefficientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeCoefficientNull() {
                this[this.table公交站线.TimeCoefficientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayCoefficientNull() {
                return this.IsNull(this.table公交站线.DayCoefficientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayCoefficientNull() {
                this[this.table公交站线.DayCoefficientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighHourSectNull() {
                return this.IsNull(this.table公交站线.HighHourSectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHighHourSectNull() {
                this[this.table公交站线.HighHourSectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighHourAreaNull() {
                return this.IsNull(this.table公交站线.HighHourAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHighHourAreaNull() {
                this[this.table公交站线.HighHourAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighHourMassNull() {
                return this.IsNull(this.table公交站线.HighHourMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHighHourMassNull() {
                this[this.table公交站线.HighHourMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighPassengerMassNull() {
                return this.IsNull(this.table公交站线.HighPassengerMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHighPassengerMassNull() {
                this[this.table公交站线.HighPassengerMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHAPE_LengthNull() {
                return this.IsNull(this.table公交站线.SHAPE_LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHAPE_LengthNull() {
                this[this.table公交站线.SHAPE_LengthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 公交站线RowChangeEvent : global::System.EventArgs {
            
            private 公交站线Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线RowChangeEvent(公交站线Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 公交站线Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Businfo.RoadDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class 公交站线TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 公交站线TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "公交站线";
            tableMapping.ColumnMappings.Add("OBJECTID", "OBJECTID");
            tableMapping.ColumnMappings.Add("SHAPE", "SHAPE");
            tableMapping.ColumnMappings.Add("RoadID", "RoadID");
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("RoadName", "RoadName");
            tableMapping.ColumnMappings.Add("RoadType", "RoadType");
            tableMapping.ColumnMappings.Add("RoadTravel", "RoadTravel");
            tableMapping.ColumnMappings.Add("FirstStartTime", "FirstStartTime");
            tableMapping.ColumnMappings.Add("FirstCloseTime", "FirstCloseTime");
            tableMapping.ColumnMappings.Add("EndStartTime", "EndStartTime");
            tableMapping.ColumnMappings.Add("EndCloseTim", "EndCloseTim");
            tableMapping.ColumnMappings.Add("TicketPrice1", "TicketPrice1");
            tableMapping.ColumnMappings.Add("TicketPrice2", "TicketPrice2");
            tableMapping.ColumnMappings.Add("TicketPrice3", "TicketPrice3");
            tableMapping.ColumnMappings.Add("RoadNo", "RoadNo");
            tableMapping.ColumnMappings.Add("Length", "Length");
            tableMapping.ColumnMappings.Add("AverageLoadFactor", "AverageLoadFactor");
            tableMapping.ColumnMappings.Add("BusNumber", "BusNumber");
            tableMapping.ColumnMappings.Add("Capacity", "Capacity");
            tableMapping.ColumnMappings.Add("PassengerSum", "PassengerSum");
            tableMapping.ColumnMappings.Add("PassengerWorkSum", "PassengerWorkSum");
            tableMapping.ColumnMappings.Add("AverageSpeed", "AverageSpeed");
            tableMapping.ColumnMappings.Add("NulineCoefficient", "NulineCoefficient");
            tableMapping.ColumnMappings.Add("NulineCoefficient2", "NulineCoefficient2");
            tableMapping.ColumnMappings.Add("Picture1", "Picture1");
            tableMapping.ColumnMappings.Add("Picture2", "Picture2");
            tableMapping.ColumnMappings.Add("Picture3", "Picture3");
            tableMapping.ColumnMappings.Add("Picture4", "Picture4");
            tableMapping.ColumnMappings.Add("Picture5", "Picture5");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("ServeArea", "ServeArea");
            tableMapping.ColumnMappings.Add("AverageLength", "AverageLength");
            tableMapping.ColumnMappings.Add("HigeLoadFactor", "HigeLoadFactor");
            tableMapping.ColumnMappings.Add("RoadLoad", "RoadLoad");
            tableMapping.ColumnMappings.Add("DirectImbalance", "DirectImbalance");
            tableMapping.ColumnMappings.Add("AlternatelyCoefficient", "AlternatelyCoefficient");
            tableMapping.ColumnMappings.Add("TimeCoefficient", "TimeCoefficient");
            tableMapping.ColumnMappings.Add("DayCoefficient", "DayCoefficient");
            tableMapping.ColumnMappings.Add("HighHourSect", "HighHourSect");
            tableMapping.ColumnMappings.Add("HighHourArea", "HighHourArea");
            tableMapping.ColumnMappings.Add("HighHourMass", "HighHourMass");
            tableMapping.ColumnMappings.Add("HighPassengerMass", "HighPassengerMass");
            tableMapping.ColumnMappings.Add("SHAPE_Length", "SHAPE_Length");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `公交站线` (`SHAPE`, `RoadID`, `Company`, `RoadName`, `RoadType`, `RoadTravel`, `FirstStartTime`, `FirstCloseTime`, `EndStartTime`, `EndCloseTim`, `TicketPrice1`, `TicketPrice2`, `TicketPrice3`, `RoadNo`, `Length`, `AverageLoadFactor`, `BusNumber`, `Capacity`, `PassengerSum`, `PassengerWorkSum`, `AverageSpeed`, `NulineCoefficient`, `NulineCoefficient2`, `Picture1`, `Picture2`, `Picture3`, `Picture4`, `Picture5`, `Unit`, `ServeArea`, `AverageLength`, `HigeLoadFactor`, `RoadLoad`, `DirectImbalance`, `AlternatelyCoefficient`, `TimeCoefficient`, `DayCoefficient`, `HighHourSect`, `HighHourArea`, `HighHourMass`, `HighPassengerMass`, `SHAPE_Length`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SHAPE", global::System.Data.OleDb.OleDbType.LongVarBinary, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SHAPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Company", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Company", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadType", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadTravel", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadTravel", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstStartTime", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstStartTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstCloseTime", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstCloseTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EndStartTime", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EndStartTime", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EndCloseTim", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EndCloseTim", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TicketPrice1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TicketPrice1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TicketPrice2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TicketPrice2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TicketPrice3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TicketPrice3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Length", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AverageLoadFactor", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AverageLoadFactor", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BusNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BusNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Capacity", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Capacity", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PassengerSum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PassengerSum", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PassengerWorkSum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PassengerWorkSum", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AverageSpeed", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AverageSpeed", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NulineCoefficient", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NulineCoefficient", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NulineCoefficient2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NulineCoefficient2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Picture1", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Picture1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Picture2", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Picture2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Picture3", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Picture3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Picture4", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Picture4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Picture5", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Picture5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Unit", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Unit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ServeArea", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ServeArea", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AverageLength", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AverageLength", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HigeLoadFactor", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HigeLoadFactor", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadLoad", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadLoad", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DirectImbalance", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DirectImbalance", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AlternatelyCoefficient", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AlternatelyCoefficient", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TimeCoefficient", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TimeCoefficient", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DayCoefficient", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DayCoefficient", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HighHourSect", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HighHourSect", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HighHourArea", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HighHourArea", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HighHourMass", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HighHourMass", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HighPassengerMass", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HighPassengerMass", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SHAPE_Length", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SHAPE_Length", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Businfo.Properties.Settings.Default.BusConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[3];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT OBJECTID, SHAPE, RoadID, Company, RoadName, RoadType, RoadTravel, FirstStartTime, FirstCloseTime, EndStartTime, EndCloseTim, TicketPrice1, TicketPrice2, TicketPrice3, RoadNo, Length, AverageLoadFactor, BusNumber, Capacity, PassengerSum, PassengerWorkSum, AverageSpeed, NulineCoefficient, NulineCoefficient2, Picture1, Picture2, Picture3, Picture4, Picture5, Unit, ServeArea, AverageLength, HigeLoadFactor, RoadLoad, DirectImbalance, AlternatelyCoefficient, TimeCoefficient, DayCoefficient, HighHourSect, HighHourArea, HighHourMass, HighPassengerMass, SHAPE_Length FROM 公交站线";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT OBJECTID, SHAPE, RoadID, Company, RoadName, RoadType, RoadTravel, 
      FirstStartTime, FirstCloseTime, EndStartTime, EndCloseTim, TicketPrice1, 
      TicketPrice2, TicketPrice3, RoadNo, Length, AverageLoadFactor, BusNumber, 
      Capacity, PassengerSum, PassengerWorkSum, AverageSpeed, NulineCoefficient, 
      NulineCoefficient2, Picture1, Picture2, Picture3, Picture4, Picture5, Unit, ServeArea, 
      AverageLength, HigeLoadFactor, RoadLoad, DirectImbalance, AlternatelyCoefficient, 
      TimeCoefficient, DayCoefficient, HighHourSect, HighHourArea, HighHourMass, 
      HighPassengerMass, SHAPE_Length
FROM 公交站线
WHERE (OBJECTID IN ({0}))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Param1", global::System.Data.OleDb.OleDbType.WChar, 100, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT OBJECTID, SHAPE, RoadID, Company, RoadName, RoadType, RoadTravel, 
      FirstStartTime, FirstCloseTime, EndStartTime, EndCloseTim, TicketPrice1, 
      TicketPrice2, TicketPrice3, RoadNo, Length, AverageLoadFactor, BusNumber, 
      Capacity, PassengerSum, PassengerWorkSum, AverageSpeed, NulineCoefficient, 
      NulineCoefficient2, Picture1, Picture2, Picture3, Picture4, Picture5, Unit, ServeArea, 
      AverageLength, HigeLoadFactor, RoadLoad, DirectImbalance, AlternatelyCoefficient, 
      TimeCoefficient, DayCoefficient, HighHourSect, HighHourArea, HighHourMass, 
      HighPassengerMass, SHAPE_Length
FROM 公交站线
WHERE (RoadName LIKE ?)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RoadName", global::System.Data.OleDb.OleDbType.WChar, 100, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RoadName", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RoadDataSet.公交站线DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RoadDataSet.公交站线DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RoadDataSet.公交站线DataTable dataTable = new RoadDataSet.公交站线DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByINOBJECTID(RoadDataSet.公交站线DataTable dataTable, string Param1) {
            this.CommandCollection[1].CommandText = string.Format(@"SELECT OBJECTID, SHAPE, RoadID, Company, RoadName, RoadType, RoadTravel, 
      FirstStartTime, FirstCloseTime, EndStartTime, EndCloseTim, TicketPrice1, 
      TicketPrice2, TicketPrice3, RoadNo, Length, AverageLoadFactor, BusNumber, 
      Capacity, PassengerSum, PassengerWorkSum, AverageSpeed, NulineCoefficient, 
      NulineCoefficient2, Picture1, Picture2, Picture3, Picture4, Picture5, Unit, ServeArea, 
      AverageLength, HigeLoadFactor, RoadLoad, DirectImbalance, AlternatelyCoefficient, 
      TimeCoefficient, DayCoefficient, HighHourSect, HighHourArea, HighHourMass, 
      HighPassengerMass, SHAPE_Length
FROM 公交站线
WHERE (OBJECTID IN ({0}))", Param1);
            this.Adapter.SelectCommand = this.CommandCollection[1];
            //if ((Param1 == null)) {
            //    throw new global::System.ArgumentNullException("Param1");
            //}
            //else {
            //    this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Param1));
            //}
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByRoadName(RoadDataSet.公交站线DataTable dataTable, string RoadName) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((RoadName == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(RoadName));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RoadDataSet.公交站线DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RoadDataSet dataSet) {
            return this.Adapter.Update(dataSet, "公交站线");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    byte[] SHAPE, 
                    global::System.Nullable<int> RoadID, 
                    string Company, 
                    string RoadName, 
                    string RoadType, 
                    string RoadTravel, 
                    string FirstStartTime, 
                    string FirstCloseTime, 
                    string EndStartTime, 
                    string EndCloseTim, 
                    global::System.Nullable<double> TicketPrice1, 
                    global::System.Nullable<double> TicketPrice2, 
                    global::System.Nullable<double> TicketPrice3, 
                    global::System.Nullable<int> RoadNo, 
                    global::System.Nullable<double> Length, 
                    global::System.Nullable<double> AverageLoadFactor, 
                    global::System.Nullable<int> BusNumber, 
                    global::System.Nullable<int> Capacity, 
                    global::System.Nullable<int> PassengerSum, 
                    global::System.Nullable<int> PassengerWorkSum, 
                    global::System.Nullable<double> AverageSpeed, 
                    global::System.Nullable<double> NulineCoefficient, 
                    global::System.Nullable<double> NulineCoefficient2, 
                    string Picture1, 
                    string Picture2, 
                    string Picture3, 
                    string Picture4, 
                    string Picture5, 
                    string Unit, 
                    global::System.Nullable<double> ServeArea, 
                    global::System.Nullable<double> AverageLength, 
                    global::System.Nullable<double> HigeLoadFactor, 
                    global::System.Nullable<double> RoadLoad, 
                    global::System.Nullable<double> DirectImbalance, 
                    global::System.Nullable<double> AlternatelyCoefficient, 
                    global::System.Nullable<double> TimeCoefficient, 
                    global::System.Nullable<double> DayCoefficient, 
                    global::System.Nullable<double> HighHourSect, 
                    global::System.Nullable<double> HighHourArea, 
                    global::System.Nullable<double> HighHourMass, 
                    global::System.Nullable<double> HighPassengerMass, 
                    global::System.Nullable<double> SHAPE_Length) {
            if ((SHAPE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((byte[])(SHAPE));
            }
            if ((RoadID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(RoadID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Company == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Company));
            }
            if ((RoadName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RoadName));
            }
            if ((RoadType == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RoadType));
            }
            if ((RoadTravel == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RoadTravel));
            }
            if ((FirstStartTime == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FirstStartTime));
            }
            if ((FirstCloseTime == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FirstCloseTime));
            }
            if ((EndStartTime == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(EndStartTime));
            }
            if ((EndCloseTim == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EndCloseTim));
            }
            if ((TicketPrice1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(TicketPrice1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((TicketPrice2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(TicketPrice2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TicketPrice3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(TicketPrice3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RoadNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(RoadNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Length.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Length.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AverageLoadFactor.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(AverageLoadFactor.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BusNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(BusNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Capacity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Capacity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PassengerSum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(PassengerSum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((PassengerWorkSum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(PassengerWorkSum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((AverageSpeed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(AverageSpeed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((NulineCoefficient.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(NulineCoefficient.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NulineCoefficient2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(NulineCoefficient2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Picture1 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Picture1));
            }
            if ((Picture2 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Picture2));
            }
            if ((Picture3 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Picture3));
            }
            if ((Picture4 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Picture4));
            }
            if ((Picture5 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Picture5));
            }
            if ((Unit == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Unit));
            }
            if ((ServeArea.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(ServeArea.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((AverageLength.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(AverageLength.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((HigeLoadFactor.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(HigeLoadFactor.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((RoadLoad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(RoadLoad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((DirectImbalance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(DirectImbalance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((AlternatelyCoefficient.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(AlternatelyCoefficient.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((TimeCoefficient.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(TimeCoefficient.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((DayCoefficient.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(DayCoefficient.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HighHourSect.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(HighHourSect.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((HighHourArea.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(HighHourArea.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((HighHourMass.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(HighHourMass.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((HighPassengerMass.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(HighPassengerMass.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((SHAPE_Length.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(SHAPE_Length.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591